---
title: "Shiny App for Black Scholes Formula"
format: html
---

```{r}
library(shiny)
library(tidyverse)

## calculate d1 for the price now, t=0:
calculate_d1 = function(S, E, r, bigT, sigma) {
  d1 = (log(S/E)+(r+(sigma^2)/2)*bigT)/(sigma*sqrt(bigT))
  return(d1)
}

## calculate d2 for the price now, t=0:
calculate_d2 = function(S, E, r, bigT, sigma) {
  d2 = (log(S/E)+(r-(sigma^2)/2)*bigT)/(sigma*sqrt(bigT))
  return(d2)
}

## calculate Call Option price now, t=0:
call_price = function(S, E, r, bigT, sigma) {
  C_E = (S*pnorm(calculate_d1(S, E, r, bigT, sigma))) - (E*exp(-r*bigT)*pnorm(calculate_d2(S, E, r, bigT, sigma)))
  return(C_E)
}

put_price = function(S, E, r, bigT, sigma) {
  P_E = (E*exp(-r*bigT)*pnorm(-1*calculate_d2(S, E, r, bigT, sigma))) - (S*pnorm(-1*calculate_d1(S, E, r, bigT, sigma)))
  return(P_E)
}

calculate_d1(S = 60, E = 60, r = 0.08, bigT = 0.243836, sigma = 0.3)
calculate_d2(S = 60, E = 60, r = 0.08, bigT = 0.243836, sigma = 0.3)
call_price(S = 60, E = 60, r = 0.08, bigT = 90/365, sigma = 0.3)
put_price(S = 60, E = 60, r = 0.08, bigT = 90/365, sigma = 0.3)

ui <- fluidPage(
  tabsetPanel(
    tabPanel("European Option Pricing", fluid = TRUE,
             sidebarLayout(
               sidebarPanel(numericInput(inputId = "s_sel",
                                         label = "Price of the Underlying Asset:",
                                         value = 60),
                            numericInput(inputId = "e_sel",
                                         label = "Exercise Price:",
                                         value = 60),
                            sliderInput(inputId = "r_sel",
                                        label = "Interest Rate (%):",
                                        min = 0,
                                        max = 30,
                                        value = 8,
                                        step = 0.1),
                            numericInput(inputId = "t_sel",
                                         label = "Time Until Expiration:",
                                         value = 90),
                            sliderInput(inputId = "sigma_sel",
                                        label = "Volatility (%):",
                                        min = 0,
                                        max = 50,
                                        value = 30,
                                        step = 0.5)),
               mainPanel(tableOutput(outputId = "pricing_table"))
             )
    ), 
    tabPanel("Pricing Visualization", fluid = TRUE,
             sidebarLayout(
               sidebarPanel(),
               mainPanel()
             )
    )
  )
)

server <- function(input, output, session) {
  
  table_react = reactive({
    callprice = call_price(S = input$s_sel, 
                           E = input$e_sel, 
                           r = (input$r_sel)/100, 
                           bigT = (input$t_sel)/365, 
                           sigma = (input$sigma_sel)/100)
    putprice = put_price(S = input$s_sel, 
                         E = input$e_sel, 
                         r = (input$r_sel)/100, 
                         bigT = (input$t_sel)/365, 
                         sigma = (input$sigma_sel)/100)
    
    table = tibble(
      Option_Type = c("Call Option Price", "Put Option Price"),
      Option_Price = c(round(callprice, digits = 4), putprice)
    )
    options(digits = 6)
    table
  })

  output$pricing_table = renderTable({
    table_react()
  })
  
}
shinyApp(ui, server)
```